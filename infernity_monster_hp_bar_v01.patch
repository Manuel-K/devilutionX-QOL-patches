Moster hp bar.

Modifications by Manuel-K:
- cleanup and refactoring
- hide elemental damage info if less than 15 kills (optional)
- hide exact hp if less than 30 kills (optional)

Self censoring can be disabled by setting cheat to true.

Based on Infernity by quendel, extracted by sergi4ua.

Rebased on devilutionX 0.3.1.

diff --git a/Source/scrollrt.cpp b/Source/scrollrt.cpp
index c55998f..972734c 100644
--- a/Source/scrollrt.cpp
+++ b/Source/scrollrt.cpp
@@ -6,6 +6,8 @@
 #include <vector>
 #include <map>
 
+#include <sstream>
+
 DEVILUTION_BEGIN_NAMESPACE
 
 int light_table_index; // weak
@@ -428,6 +430,9 @@ void __fastcall DrawView(int StartX, int StartY)
 	else if (PauseMode)
 		gmenu_draw_pause();
 
+	if (pcursmonst != -1) {
+		DrawMonsterHealthBar(pcursmonst);
+	}
 	DrawPlrMsg();
 	gmenu_draw();
 	doom_draw();
@@ -566,6 +571,129 @@ void __fastcall DrawGame(int x, int y)
 // 69CF0C: using guessed type int gpBufEnd;
 // 69CF20: using guessed type char arch_draw_type;
 
+void DrawMonsterHealthBar(int monsterID)
+{
+	static const int yPos = 180;
+	static const int width = 250;
+	static const int ScreenWidth = 640;
+	static const int Screen_LeftBorder = 64;
+	static const int xPos = (ScreenWidth) / 2 - Screen_LeftBorder;
+	static const int height = 25;
+	static const int xOffset = 0;
+	static const int yOffset = 0; // was 1
+	static const int borderWidth = 2;
+	static const int borderColors[] = { 242/*undead*/,232/*demon*/,182/*beast*/ };
+	static const int filledColor = 142; // optimum balance in bright red between dark and light
+	static const bool fillCorners = true;
+	static const int square = 10;
+	static const char* immuText = "IMMU: ";
+	static const char* resText = "RES: ";
+	static const char* vulnText = ":VULN";
+	static const int resSize = 3;
+	static const int resistColors[] = { 148, 140, 129 };
+	static const unsigned short immunes[] = { 0x8, 0x10, 0x20 };
+	static const unsigned short resists[] = { 0x1, 0x2, 0x4 };
+	static const bool cheat = false;
+
+	MonsterStruct* mon = &monster[monsterID];
+	BOOL specialMonster = !!mon->_uniqtype;
+	int currentLife = mon->_mhitpoints;
+	int maxLife = mon->_mmaxhp;
+	if (currentLife > maxLife) {
+		maxLife = currentLife;
+	}
+	int borderColor =  borderColors[mon->MData->mMonstClass];
+	float FilledPercent = (float)currentLife / (float)maxLife;
+	unsigned short mres = mon->mMagicRes;
+	bool showHPNumbers = cheat || monstkills[mon->MType->mtype] >= 30;
+	bool showDamageModifiers = cheat || monstkills[mon->MType->mtype] >= 15;
+
+	if (showDamageModifiers) {
+		int resOffset = 0 + CalculateTextWidth(resText);
+		for (int k = 0; k < resSize; ++k) {
+			if (!(mres & resists[k])) {
+				continue;
+			}
+			DrawSolidRectangle(xPos + resOffset, square, yPos + height + yOffset + borderWidth + 2, square, resistColors[k]);
+			resOffset += 12;
+		}
+
+		int vulOffset = width - square - CalculateTextWidth(vulnText) - 4;
+		for (int k = 0; k < resSize; ++k) {
+			if (mres & resists[k] || mres & immunes[k]) {
+				continue;
+			}
+			DrawSolidRectangle(xPos + vulOffset, square, yPos + height + yOffset + borderWidth + 2, square, resistColors[k]);
+			vulOffset -= 12;
+		}
+	}
+
+	DrawSolidRectangle(xPos, (int) ceil(FilledPercent * width), yPos, height, filledColor);
+
+	static const int cornerMod = fillCorners ? borderWidth : 0;
+	static const int x0 = xPos - xOffset;
+	static const int dx = width + 2*xOffset + cornerMod;
+	static const int y0 = yPos - yOffset;
+	static const int dy = height + 2*yOffset + cornerMod;
+	DrawSolidRectangle(x0 - cornerMod, dx, yPos - yOffset - borderWidth, borderWidth, borderColor);
+	DrawSolidRectangle(x0            , dx, yPos + yOffset + height,      borderWidth, borderColor);
+	DrawSolidRectangle(xPos - xOffset - borderWidth, borderWidth, y0,             dy, borderColor);
+	DrawSolidRectangle(xPos + xOffset + width,       borderWidth, y0 - cornerMod, dy, borderColor);
+
+	bool drawImmu = false;
+	if (showDamageModifiers) {
+		int immuOffset = 0 + CalculateTextWidth(immuText) - 5;
+		for (int k = 0; k < resSize; ++k) {
+			if (!(mres & immunes[k])) {
+				continue;
+			}
+			drawImmu = true;
+			DrawSolidRectangle(xPos + immuOffset, square, yPos + height + yOffset + borderWidth + 2 - 15, square, resistColors[k]);
+			immuOffset += 12;
+		}
+	}
+
+	static const int newX = xPos + Screen_LeftBorder;
+	static const int newY = yPos + height - 3;
+	std::stringstream name;
+	name << mon->mName;
+	if (mon->leader > 0) {
+		name << " (minion)";
+	}
+	int namecolor = COL_WHITE;
+	if (specialMonster) { // || name.str() == "The Dark Lord"
+		namecolor = COL_GOLD;
+	}
+
+	if (!showHPNumbers) {
+		PrintGameStr(newX - CalculateTextWidth((char*)name.str().c_str()) / 2, 37, (char*)name.str().c_str(), namecolor);
+	} else {
+		static const int TWSlash = CalculateTextWidth("/");
+		PrintGameStr(newX - CalculateTextWidth((char*)name.str().c_str()) / 2, 30, (char*)name.str().c_str(), namecolor);
+		PrintGameStr(newX - TWSlash / 2, 43, "/", COL_WHITE);
+		std::stringstream current;
+		current << (currentLife >> 6);
+		std::stringstream max;
+		max << (maxLife >> 6);
+		PrintGameStr(newX + TWSlash, 43, (char*)max.str().c_str(), COL_WHITE);
+		PrintGameStr(newX - CalculateTextWidth((char*)current.str().c_str()) - TWSlash, 43, (char*)current.str().c_str(), COL_WHITE);
+	}
+	if (showDamageModifiers) {
+		PrintGameStr(newX - width / 2, 59, resText, COL_GOLD);
+	}
+
+	std::stringstream kills;
+	kills << "Kills: " << monstkills[mon->MType->mtype];
+	PrintGameStr(newX - CalculateTextWidth("kills")/2-30, 59, (char*)(kills.str().c_str()), COL_WHITE);
+
+	if (drawImmu) {
+		PrintGameStr(newX - width / 2, 46-2, immuText, COL_GOLD);
+	}
+	if (showDamageModifiers) {
+		PrintGameStr(newX + width / 2 - CalculateTextWidth(vulnText), 59, vulnText, COL_RED);
+	}
+}
+
 void __fastcall scrollrt_draw_lower(int x, int y, int sx, int sy, int a5, int some_flag)
 {
 	unsigned int v6;    // edi
diff --git a/Source/scrollrt.h b/Source/scrollrt.h
index 48a6405..f07813e 100644
--- a/Source/scrollrt.h
+++ b/Source/scrollrt.h
@@ -21,6 +21,7 @@ void __fastcall DrawPlayer(int pnum, int x, int y, int px, int py, BYTE *pCelBuf
 void __fastcall DrawClippedPlayer(int pnum, int x, int y, int px, int py, BYTE *pCelBuff, int nCel, int nWidth, int a9, int a10);
 void __fastcall DrawView(int StartX, int StartY);
 void __fastcall DrawGame(int x, int y);
+void DrawMonsterHealthBar(int monsterID);
 void __fastcall scrollrt_draw_lower(int x, int y, int sx, int sy, int a5, int some_flag);
 void __fastcall scrollrt_draw_clipped_dungeon(char *a1, int sx, int sy, int a4, int a5, int a6);
 void __fastcall DrawClippedMonster(int x, int y, int mx, int my, int m, int a6, int a7);

