Common helper function for Infernity patches.

CalculateTextWidth() from Infernity by quendel, extracted by sergi4ua.

diff --git a/Source/engine.cpp b/Source/engine.cpp
index 2474973..487ff83 100644
--- a/Source/engine.cpp
+++ b/Source/engine.cpp
@@ -581,6 +581,24 @@ void CelDecDatLightTrans(BYTE *pDecodeTo, BYTE *pRLEBytes, int nDataSize, int nW
 }
 // 69BEF8: using guessed type int light_table_index;
 
+void DrawSolidRectangle(int x0, int dx, int y0, int dy, int color) {
+	char* WorkingSurface = (char*)gpBuffer;
+	for (int x = x0; x < x0 + dx; x++) {
+		for (int y = y0; y < y0 + dy; y++) {
+			WorkingSurface[y*768+x] = color;
+		}
+	}
+}
+
+int CalculateTextWidth(char* s)
+{
+	int l = 0;
+	while (*s) {
+		l += fontkern[fontframe[gbFontTransTbl[*s++]]] + 1;
+	}
+	return l;
+}
+
 void CelDecodeLightOnly(int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth)
 {
 	int nDataSize;
diff --git a/Source/engine.h b/Source/engine.h
index ba1095e..8aa041a 100644
--- a/Source/engine.h
+++ b/Source/engine.h
@@ -18,6 +18,8 @@ void CelDrawHdrOnly(int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth, int Ce
 void CelDecodeHdrOnly(BYTE *pBuff, BYTE *pCelBuff, int nCel, int nWidth, int CelSkip, int CelCap);
 void CelDecDatLightOnly(BYTE *pDecodeTo, BYTE *pRLEBytes, int nDataSize, int nWidth);
 void CelDecDatLightTrans(BYTE *pDecodeTo, BYTE *pRLEBytes, int nDataSize, int nWidth);
+void DrawSolidRectangle(int x0, int dx, int y0, int dy, int color);
+int CalculateTextWidth(char* s);
 void CelDecodeLightOnly(int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth);
 void CelDecodeHdrLightOnly(int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth, int CelSkip, int CelCap);
 void CelDecodeHdrLightTrans(BYTE *pBuff, BYTE *pCelBuff, int nCel, int nWidth, int CelSkip, int CelCap);
