Minimal left mouse button auto clicker.

Note: track_repeat_walk has not been renamed to avoid unnecessary changes.

diff --git a/Source/diablo.cpp b/Source/diablo.cpp
index e61341f8..836ed65e 100644
--- a/Source/diablo.cpp
+++ b/Source/diablo.cpp
@@ -678,8 +678,10 @@ BOOL LeftMouseCmd(BOOL bShift)
 			NetSendCmdLocParam1(TRUE, invflag ? CMD_GOTOGETITEM : CMD_GOTOAGETITEM, cursmx, cursmy, pcursitem);
 		if (pcursmonst != -1)
 			NetSendCmdLocParam1(TRUE, CMD_TALKXY, cursmx, cursmy, pcursmonst);
-		if (pcursitem == -1 && pcursmonst == -1 && pcursplr == -1)
+		if (pcursitem == -1 && pcursmonst == -1 && pcursplr == -1) {
+			track_lmb_loc(CMD_WALKXY, cursmx, cursmy);
 			return TRUE;
+		}
 	} else {
 		bNear = abs(plr[myplr].WorldX - cursmx) < 2 && abs(plr[myplr].WorldY - cursmy) < 2;
 		if (pcursitem != -1 && pcurs == CURSOR_HAND && !bShift) {
@@ -688,12 +690,15 @@ BOOL LeftMouseCmd(BOOL bShift)
 			NetSendCmdLocParam1(TRUE, pcurs == CURSOR_DISARM ? CMD_DISARMXY : CMD_OPOBJXY, cursmx, cursmy, pcursobj);
 		} else if (plr[myplr]._pwtype == WT_RANGED) {
 			if (bShift) {
-				NetSendCmdLoc(TRUE, CMD_RATTACKXY, cursmx, cursmy);
+				track_lmb_loc(CMD_RATTACKXY, cursmx, cursmy);
+				return TRUE;
 			} else if (pcursmonst != -1) {
 				if (CanTalkToMonst(pcursmonst)) {
-					NetSendCmdParam1(TRUE, CMD_ATTACKID, pcursmonst);
+					track_lmb_param1(CMD_ATTACKID, pcursmonst);
+					return TRUE;
 				} else {
-					NetSendCmdParam1(TRUE, CMD_RATTACKID, pcursmonst);
+					track_lmb_param1(CMD_RATTACKID, pcursmonst);
+					return TRUE;
 				}
 			} else if (pcursplr != -1 && !FriendlyMode) {
 				NetSendCmdParam1(TRUE, CMD_RATTACKPID, pcursplr);
@@ -702,21 +707,27 @@ BOOL LeftMouseCmd(BOOL bShift)
 			if (bShift) {
 				if (pcursmonst != -1) {
 					if (CanTalkToMonst(pcursmonst)) {
-						NetSendCmdParam1(TRUE, CMD_ATTACKID, pcursmonst);
+						track_lmb_param1(CMD_ATTACKID, pcursmonst);
+						return TRUE;
 					} else {
-						NetSendCmdLoc(TRUE, CMD_SATTACKXY, cursmx, cursmy);
+						track_lmb_loc(CMD_SATTACKXY, cursmx, cursmy);
+						return TRUE;
 					}
 				} else {
-					NetSendCmdLoc(TRUE, CMD_SATTACKXY, cursmx, cursmy);
+					track_lmb_loc(CMD_SATTACKXY, cursmx, cursmy);
+					return TRUE;
 				}
 			} else if (pcursmonst != -1) {
-				NetSendCmdParam1(TRUE, CMD_ATTACKID, pcursmonst);
+				track_lmb_param1(CMD_ATTACKID, pcursmonst);
+				return TRUE;
 			} else if (pcursplr != -1 && !FriendlyMode) {
 				NetSendCmdParam1(TRUE, CMD_ATTACKPID, pcursplr);
 			}
 		}
-		if (!bShift && pcursitem == -1 && pcursobj == -1 && pcursmonst == -1 && pcursplr == -1)
+		if (!bShift && pcursitem == -1 && pcursobj == -1 && pcursmonst == -1 && pcursplr == -1) {
+			track_lmb_loc(CMD_WALKXY, cursmx, cursmy);
 			return TRUE;
+		}
 	}
 
 	return FALSE;
diff --git a/Source/track.cpp b/Source/track.cpp
index 43162e73..4948829d 100644
--- a/Source/track.cpp
+++ b/Source/track.cpp
@@ -5,6 +5,8 @@ DEVILUTION_BEGIN_NAMESPACE
 static BYTE sgbIsScrolling;
 static DWORD sgdwLastWalk;
 static BOOL sgbIsWalking;
+static BYTE sgbCommand;
+static WORD sgwParam1;
 
 void track_process()
 {
@@ -14,20 +16,47 @@ void track_process()
 	if (cursmx < 0 || cursmx >= MAXDUNX - 1 || cursmy < 0 || cursmy >= MAXDUNY - 1)
 		return;
 
-	if (plr[myplr]._pVar8 <= 6 && plr[myplr]._pmode != PM_STAND)
+	if (sgbCommand == CMD_WALKXY && plr[myplr]._pVar8 <= 6 && plr[myplr]._pmode != PM_STAND)
 		return;
 
 	if (cursmx != plr[myplr]._ptargx || cursmy != plr[myplr]._ptargy) {
 		DWORD tick = GetTickCount();
 		if ((int)(tick - sgdwLastWalk) >= 300) {
 			sgdwLastWalk = tick;
-			NetSendCmdLoc(TRUE, CMD_WALKXY, cursmx, cursmy);
-			if (!sgbIsScrolling)
-				sgbIsScrolling = 1;
+			switch (sgbCommand) {
+				case CMD_WALKXY:
+					NetSendCmdLoc(TRUE, CMD_WALKXY, cursmx, cursmy);
+					if (!sgbIsScrolling)
+						sgbIsScrolling = 1;
+					break;
+				case CMD_SATTACKXY:
+				case CMD_RATTACKXY:
+					NetSendCmdLoc(TRUE, sgbCommand, cursmx, cursmy);
+					break;
+				case CMD_ATTACKID:
+				case CMD_RATTACKID:
+					if (pcursmonst != sgwParam1)
+						return;
+					NetSendCmdParam1(TRUE, sgbCommand, pcursmonst);
+					break;
+			}
 		}
 	}
 }
 
+void track_lmb_loc(BYTE bCmd, BYTE x, BYTE y)
+{
+	NetSendCmdLoc(TRUE, bCmd, x, y);
+	sgbCommand = bCmd;
+}
+
+void track_lmb_param1(BYTE bCmd, WORD wParam1)
+{
+	NetSendCmdParam1(TRUE, bCmd, wParam1);
+	sgbCommand = bCmd;
+	sgwParam1 = wParam1;
+}
+
 void track_repeat_walk(BOOL rep)
 {
 	if (sgbIsWalking == rep)
@@ -37,7 +66,6 @@ void track_repeat_walk(BOOL rep)
 	if (rep) {
 		sgbIsScrolling = 0;
 		sgdwLastWalk = GetTickCount() - 50;
-		NetSendCmdLoc(TRUE, CMD_WALKXY, cursmx, cursmy);
 	} else if (sgbIsScrolling) {
 		sgbIsScrolling = 0;
 	}
diff --git a/Source/track.h b/Source/track.h
index a2a2506c..e8e912f9 100644
--- a/Source/track.h
+++ b/Source/track.h
@@ -3,6 +3,8 @@
 #define __TRACK_H__
 
 void track_process();
+void track_lmb_loc(BYTE bCmd, BYTE x, BYTE y);
+void track_lmb_param1(BYTE bCmd, WORD wParam1);
 void track_repeat_walk(BOOL rep);
 BOOL track_isscrolling();
 
