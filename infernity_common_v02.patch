Common helper function for Infernity patches.

CalculateTextWidth() from Infernity by qndel, extracted by sergi4ua.

diff --git a/Source/engine.cpp b/Source/engine.cpp
index 93a7d7c6..a569b8a9 100644
--- a/Source/engine.cpp
+++ b/Source/engine.cpp
@@ -648,6 +648,32 @@ void engine_draw_pixel(int sx, int sy)
 		*dst = gbPixelCol;
 }
 
+void DrawTransparentRectangle(int x0, int dx, int y0, int dy, int color) {
+	for (int y = y0; y < y0 + dy; y++) {
+		for (int x = x0; x < x0 + dx; x++) {
+			if (y % 2 == x % 2) {
+				continue;
+			}
+			gpBuffer[(SCREEN_Y + y) * BUFFER_WIDTH + SCREEN_X + x] = color;
+		}
+	}
+}
+
+void DrawSolidRectangle(int x0, int dx, int y0, int dy, int color) {
+	for (int y = y0; y < y0 + dy; y++) {
+		memset(&gpBuffer[(SCREEN_Y + y) * BUFFER_WIDTH + SCREEN_X + x0], color, dx);
+	}
+}
+
+int CalculateTextWidth(const char* s)
+{
+	int l = 0;
+	while (*s) {
+		l += fontkern[fontframe[gbFontTransTbl[*s++]]] + 1;
+	}
+	return l;
+}
+
 /**
  * @brief Draw a line on the back buffer
  * @param x0 Back buffer coordinate
diff --git a/Source/engine.h b/Source/engine.h
index 8811043a..277665c7 100644
--- a/Source/engine.h
+++ b/Source/engine.h
@@ -78,6 +78,9 @@ void CelDrawLightRedSafe(int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth, c
 void CelBlitWidth(BYTE *pBuff, int x, int y, int wdt, BYTE *pCelBuff, int nCel, int nWidth);
 void CelBlitOutline(char col, int sx, int sy, BYTE *pCelBuff, int nCel, int nWidth);
 void ENG_set_pixel(int sx, int sy, BYTE col);
+void DrawTransparentRectangle(int x0, int dx, int y0, int dy, int color);
+void DrawSolidRectangle(int x0, int dx, int y0, int dy, int color);
+int CalculateTextWidth(const char* s);
 void engine_draw_pixel(int sx, int sy);
 void DrawLine(int x0, int y0, int x1, int y1, BYTE col);
 int GetDirection(int x1, int y1, int x2, int y2);
